<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vx = 0;
vy = 0;
facing = 1;
tension = 0;
max_tension = 60;
sprite = spr_hazmat;
anim = 0;
canshoot = 0;
base_fire = 8;
fire_rate = base_fire;
reset_fire = 0;
walk = 2;
reload = 0;
flash = 0;
can_cable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_die, 0, false);
obj_control.alarm[0] = 60;
instance_create(x, y, obj_dead);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_cable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var left_held = false;
var right_held = false;
var jump_held = false;
var jump_pressed = false;
var jump_released = false;
var shoot_held = false;

if (!scr_fading()) {
    left_held = keyboard_check(vk_left);
    right_held = keyboard_check(vk_right);
    jump_held = keyboard_check(ord('A'));
    jump_pressed = keyboard_check_pressed(ord('A'));
    jump_released = keyboard_check_released(ord('A'));
    shoot_held = keyboard_check(ord('S'));
}

if (flash &gt; 0)
    flash--;

if (reload &gt; 0)
    reload--;

if (canshoot &gt; 0)
    canshoot--;
else if (reset_fire &gt; 0)
    reset_fire--;
else if (fire_rate &gt; base_fire) {
    audio_play_sound(snd_reload, 0, false);
    fire_rate = base_fire;
    reload = 8;
}

if (left_held)
    vx -= 1;
if (right_held)
    vx += 1;

if (vx &gt; 0) {
    vx -= 0.5;
    facing = 1;
}
else if (vx &lt; 0) {
    vx += 0.5;
    facing = -1;
}
    
if (vx &gt; 2)
    vx = 2;
if (vx &lt; -2)
    vx = -2;
    
var grav = 0;
if (place_free(x, y + 1))
    grav = 0.5;
    
vy += grav;

if (jump_pressed &amp;&amp; !place_free(x, y + 1)) {
    audio_play_sound(snd_jump, 0, false);
    can_cable = false;
    vy = -7;
}
    
if (jump_released &amp;&amp; vy &lt; 0)
    vy /= 2;
    
if (jump_held &amp;&amp; !can_cable)
    alarm[0] = 2;

if (vy &gt; -1) {   
    if (jump_held &amp;&amp; place_free(x, y + 1)) {
        if (can_cable) {
            if (!audio_is_playing(snd_reel)) {
                audio_play_sound(snd_reel, 0, false);
                audio_sound_pitch(snd_reel, 1 + 2 * (tension / max_tension));
            }
            tension += vy + 1;
            if (tension &gt; max_tension)
                instance_destroy();
            vy = -1;
        }
    }
    else {
        if (!place_free(x, y + 1))
            tension -= 4;
        if (tension &lt; 0)
            tension = 0;
    }
}

if (vy &gt; 8)
    vy = 8;
    
if (shoot_held &amp;&amp; canshoot &lt;= 0) {
    audio_play_sound(snd_shoot, 0, false);
    var bullet = instance_create(x + 8 * facing, y + 11, obj_bullet);
    bullet.image_xscale = facing;
    canshoot = floor(fire_rate);
    reset_fire = 30;
    fire_rate += 0.25;
    flash = 8;
}
   
move_x = round(vx);
     
if (place_free(x + move_x, y))
    x += move_x;
else {
    move_contact_solid(90 - sign(move_x) * 90, move_x);
    vx = 0;
}

move_y = round(vy);

if (place_free(x, y + move_y)) {
    y += move_y;
    if (y &lt; global.top)
        y = global.top;
}
else {
    if (move_y &gt; 0)
        audio_play_sound(snd_land, 0, false);
    move_contact_solid(-sign(move_y) * 90, move_y);
    vy = 0;
}

if (y + 16 &gt; obj_background.bottom_level)
    instance_destroy();
    
if (global.collapse &amp;&amp; place_meeting(x, y + 1, obj_tilewall) &amp;&amp; !scr_fading()) {
    audio_play_sound(snd_land_complete, 0, false);
    global.level++;
    global.levels_completed = global.level;
    scr_save_data("levels_completed", global.levels_completed);
    global.next_room = room_next(room);
    scr_room_goto(rm_mission_complete);
}
    
//ANIMATION

if (place_free(x, y + 1)) {
    if (vy &lt; 0)
        sprite = spr_hazmat_jump;
    else
        sprite = spr_hazmat_fall;
}
else {
    if (abs(vx) &lt;= 0.5)
        sprite = spr_hazmat;
    else {
        anim += abs(vx) / 16;
        walk += abs(vx) / 16;
        if (walk &gt;= 4) {
            audio_play_sound(snd_walk, 0, false);
            walk = 0;
        }
        if (anim &gt;= 8)
            anim = 0;
        sprite = spr_hazmat_run;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_end">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.collapse = true;
with (other)
    instance_destroy();
 
audio_stop_sound(snd_level_music);  
audio_play_sound(snd_collect, 0, false);
audio_play_sound(snd_escape_music, 1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (flash &gt; 0) {
    var flash_anim;
    if (flash &gt; 4)
        flash_anim = 0;
    else
        flash_anim = 1;
    draw_sprite_ext(spr_flash, flash_anim, x, y, facing, 1, 0, c_white, 1);
}

draw_sprite_ext(sprite, anim, x, y, facing, 1, 0, c_white, 1);

if (reload &gt; 0) {
    if (reload &gt; 4)
        draw_set_color(c_red);
    else
        draw_set_color(c_yellow);
        
    draw_circle(x + 13 * facing, y + 10, reload, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
